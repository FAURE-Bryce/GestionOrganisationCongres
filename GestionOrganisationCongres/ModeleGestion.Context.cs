//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionOrganisationCongres
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gestionCongresEntities : DbContext
    {
        public gestionCongresEntities()
            : base("name=gestionCongresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activite> Activites { get; set; }
        public virtual DbSet<Congressiste> Congressistes { get; set; }
        public virtual DbSet<Hotel> Hotels { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<Categorie> Categories { get; set; }
        public virtual DbSet<Ligue> Ligues { get; set; }
        public virtual DbSet<Salle> Salles { get; set; }
    
        public virtual int montantTotal(Nullable<int> idCongressiste, ObjectParameter total)
        {
            var idCongressisteParameter = idCongressiste.HasValue ?
                new ObjectParameter("idCongressiste", idCongressiste) :
                new ObjectParameter("idCongressiste", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("montantTotal", idCongressisteParameter, total);
        }
    
        public virtual int nbPlacesActivite(Nullable<int> uneActivite)
        {
            var uneActiviteParameter = uneActivite.HasValue ?
                new ObjectParameter("uneActivite", uneActivite) :
                new ObjectParameter("uneActivite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("nbPlacesActivite", uneActiviteParameter);
        }
    
        public virtual int NbPlacesBySession(Nullable<int> numSession)
        {
            var numSessionParameter = numSession.HasValue ?
                new ObjectParameter("numSession", numSession) :
                new ObjectParameter("numSession", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NbPlacesBySession", numSessionParameter);
        }
    
        public virtual ObjectResult<Congressiste> GetCongressistesDisponiblesByActivite(Nullable<int> idA)
        {
            var idAParameter = idA.HasValue ?
                new ObjectParameter("idA", idA) :
                new ObjectParameter("idA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Congressiste>("GetCongressistesDisponiblesByActivite", idAParameter);
        }
    
        public virtual ObjectResult<Congressiste> GetCongressistesDisponiblesByActivite(Nullable<int> idA, MergeOption mergeOption)
        {
            var idAParameter = idA.HasValue ?
                new ObjectParameter("idA", idA) :
                new ObjectParameter("idA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Congressiste>("GetCongressistesDisponiblesByActivite", mergeOption, idAParameter);
        }
    
        public virtual ObjectResult<Congressiste> GetCongressistesDisponiblesBySession(Nullable<int> idS)
        {
            var idSParameter = idS.HasValue ?
                new ObjectParameter("idS", idS) :
                new ObjectParameter("idS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Congressiste>("GetCongressistesDisponiblesBySession", idSParameter);
        }
    
        public virtual ObjectResult<Congressiste> GetCongressistesDisponiblesBySession(Nullable<int> idS, MergeOption mergeOption)
        {
            var idSParameter = idS.HasValue ?
                new ObjectParameter("idS", idS) :
                new ObjectParameter("idS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Congressiste>("GetCongressistesDisponiblesBySession", mergeOption, idSParameter);
        }
    
        public virtual ObjectResult<Activite> GetActivitesPasInscrit(Nullable<int> idC)
        {
            var idCParameter = idC.HasValue ?
                new ObjectParameter("idC", idC) :
                new ObjectParameter("idC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Activite>("GetActivitesPasInscrit", idCParameter);
        }
    
        public virtual ObjectResult<Activite> GetActivitesPasInscrit(Nullable<int> idC, MergeOption mergeOption)
        {
            var idCParameter = idC.HasValue ?
                new ObjectParameter("idC", idC) :
                new ObjectParameter("idC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Activite>("GetActivitesPasInscrit", mergeOption, idCParameter);
        }
    
        public virtual ObjectResult<Session> GetSessionsPasInscrit(Nullable<int> idC)
        {
            var idCParameter = idC.HasValue ?
                new ObjectParameter("idC", idC) :
                new ObjectParameter("idC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetSessionsPasInscrit", idCParameter);
        }
    
        public virtual ObjectResult<Session> GetSessionsPasInscrit(Nullable<int> idC, MergeOption mergeOption)
        {
            var idCParameter = idC.HasValue ?
                new ObjectParameter("idC", idC) :
                new ObjectParameter("idC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetSessionsPasInscrit", mergeOption, idCParameter);
        }
    }
}
